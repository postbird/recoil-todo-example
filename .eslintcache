[{"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\index.tsx":"1","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\reportWebVitals.ts":"2","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\App.tsx":"3","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\index.tsx":"4","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\atoms\\index.ts":"5","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\mods\\TodoAdd\\index.tsx":"6","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\constants\\index.tsx":"7","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil2\\atoms\\index.ts":"8","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\hooks\\todo.ts":"9","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\mods\\TodoItem\\index.tsx":"10"},{"size":542,"mtime":1609263176799,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1609263176806,"results":"13","hashOfConfig":"12"},{"size":398,"mtime":1609263176788,"results":"14","hashOfConfig":"12"},{"size":1267,"mtime":1610293019482,"results":"15","hashOfConfig":"12"},{"size":1624,"mtime":1610292115777,"results":"16","hashOfConfig":"12"},{"size":700,"mtime":1610292977620,"results":"17","hashOfConfig":"12"},{"size":94,"mtime":1609263176789,"results":"18","hashOfConfig":"12"},{"size":1587,"mtime":1609263176804,"results":"19","hashOfConfig":"12"},{"size":856,"mtime":1610292976207,"results":"20","hashOfConfig":"12"},{"size":1524,"mtime":1610292967071,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11r27lk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\index.tsx",[],["45","46"],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\reportWebVitals.ts",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\App.tsx",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\index.tsx",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\atoms\\index.ts",["47"],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\mods\\TodoAdd\\index.tsx",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\constants\\index.tsx",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil2\\atoms\\index.ts",["48"],"import {\r\n\tatom,\r\n\tatomFamily,\r\n\tselectorFamily,\r\n\tRecoilState,\r\n\tselector,\r\n\tReadOnlySelectorOptions,\r\n} from 'recoil';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { TODO_FILTER } from '../../../constants';\r\n\r\nexport interface ITodo {\r\n\tid: string;\r\n\ttitle: string;\r\n\tcompleted: boolean;\r\n\tdeleted: boolean;\r\n\tcreated: number;\r\n}\r\n\r\ntype ITodoList = ITodo[];\r\n\r\nexport const generateTodo = (title: string): ITodo => ({\r\n\tid: uuidv4(),\r\n\ttitle,\r\n\tcompleted: false,\r\n\tdeleted: false,\r\n\tcreated: +new Date(),\r\n});\r\n\r\nexport const todoListAtom: RecoilState<ITodoList> = atom({\r\n\tkey: 'todoList',\r\n\tdefault: [\r\n\t\tgenerateTodo('xx'),\r\n\t\tgenerateTodo('xx'),\r\n\t\tgenerateTodo('xx'),\r\n\t\tgenerateTodo('xx'),\r\n\t] as ITodoList,\r\n});\r\n\r\nexport const todoItemSelectorWithId = selectorFamily({\r\n\tkey: 'todoItemSelectorWithId',\r\n\tget: (id: string) => ({ get }) => get(todoListAtom).filter(item => item.id === id)[0],\r\n});\r\n\r\nexport const todoAtomWithId = atomFamily({\r\n\tkey: `todoItemFamily`,\r\n\tdefault: (id: string) => todoItemSelectorWithId(id),\r\n});\r\n\r\nexport const todoFilterAtom = atom({\r\n\tkey: 'todoFilterAtom',\r\n\tdefault: TODO_FILTER.ALL,\r\n});\r\n\r\nexport const todoListFilterSelector = selector({\r\n\tkey: 'todoListFilterSelector',\r\n\tget: ({ get }) => {\r\n\t\tconst filter = get(todoFilterAtom);\r\n\t\tconst todoList = get(todoListAtom);\r\n\t\tconsole.log(todoList);\r\n\r\n\t\treturn todoList.filter(todo => {\r\n\t\t\tswitch (filter) {\r\n\t\t\t\tcase TODO_FILTER.ACTIVE:\r\n\t\t\t\t\treturn !todo.completed;\r\n\t\t\t\tcase TODO_FILTER.COMPLETED:\r\n\t\t\t\t\treturn todo.completed;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n});\r\n",["49","50"],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\hooks\\todo.ts",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\mods\\TodoItem\\index.tsx",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":8,"column":2,"nodeType":"58","messageId":"59","endLine":8,"endColumn":16},{"ruleId":"56","severity":1,"message":"60","line":7,"column":2,"nodeType":"58","messageId":"59","endLine":7,"endColumn":25},{"ruleId":"52","replacedBy":"61"},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","severity":1,"message":"63","line":9,"column":16,"nodeType":"58","messageId":"59","endLine":9,"endColumn":23},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'useRecoilValue' is defined but never used.","Identifier","unusedVar","'ReadOnlySelectorOptions' is defined but never used.",["64"],["65"],"'setTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]