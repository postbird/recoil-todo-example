[{"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\index.tsx":"1","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\reportWebVitals.ts":"2","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\App.tsx":"3","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\index.tsx":"4","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\atoms\\index.ts":"5","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\mods\\TodoAdd\\index.tsx":"6","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\constants\\index.tsx":"7"},{"size":524,"mtime":1608659157811,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607442308346,"results":"10","hashOfConfig":"9"},{"size":378,"mtime":1608660743602,"results":"11","hashOfConfig":"9"},{"size":2756,"mtime":1609177796930,"results":"12","hashOfConfig":"9"},{"size":1527,"mtime":1609262941972,"results":"13","hashOfConfig":"9"},{"size":833,"mtime":1609175520840,"results":"14","hashOfConfig":"9"},{"size":94,"mtime":1609177112631,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11r27lk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\index.tsx",[],["33","34"],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\reportWebVitals.ts",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\App.tsx",[],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\index.tsx",["35","36"],"import React, { ChangeEvent, useMemo, useState, KeyboardEvent } from 'react';\nimport { List, Checkbox, Input, Select } from 'antd';\nimport classnames from 'classnames';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport styles from './index.module.css';\nimport {\n\ttodoListFilterSelector,\n\ttodoAtomWithId,\n\ttodoFilterAtom,\n\ttodoListAtom,\n} from './atoms/index';\nimport TodoAdd from './mods/TodoAdd';\nimport { TODO_FILTER } from '../../constants';\nimport { SelectValue } from 'antd/lib/select';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst TodoRecoil = () => {\n\tconst todoList = useRecoilValue(todoListFilterSelector);\n\n\treturn (\n\t\t<div className={styles.wrap}>\n\t\t\t<TodoAdd />\n\t\t\t<List\n\t\t\t\tsize=\"large\"\n\t\t\t\theader={<ListHeader />}\n\t\t\t\tfooter={<div>Footer</div>}\n\t\t\t\tbordered\n\t\t\t\tdataSource={todoList}\n\t\t\t\trenderItem={item => <TodoItem key={item.id} id={item.id} />}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst TodoItem: React.FC<{ id: string }> = ({ id }) => {\n\tconst [todo, setTodo] = useRecoilState(todoAtomWithId(id));\n\tconst [editable, setEditable] = useState(false);\n\tconst todoList = useRecoilValue(todoListAtom);\n\tconsole.log('todoList', todoList);\n\tconsole.log('todo', todo);\n\n\tconst handleCheckboxChange = (ev: CheckboxChangeEvent) => {\n\t\tsetTodo({ ...todo, completed: ev.target.checked });\n\t};\n\n\tconst handleTitleClick = () => {\n\t\tsetEditable(!editable);\n\t};\n\n\tconst handleInputChange = (ev: ChangeEvent<HTMLInputElement>) => {\n\t\tsetTodo({ ...todo, title: ev.target.value });\n\t};\n\n\tconst handleInputBlur = () => {\n\t\tsetEditable(false);\n\t};\n\n\tconst handleInputOnKeyDown = (ev: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (ev.key === 'Enter') {\n\t\t\tsetEditable(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<List.Item className={styles.listItem}>\n\t\t\t{editable ? (\n\t\t\t\t<Input\n\t\t\t\t\tvalue={todo.title}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tonBlur={handleInputBlur}\n\t\t\t\t\tonKeyDown={handleInputOnKeyDown}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<span\n\t\t\t\t\tclassName={classnames({ [styles.listItemCompleted]: todo.completed })}\n\t\t\t\t\tonClick={handleTitleClick}>\n\t\t\t\t\t{todo.title}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t\t<Checkbox checked={todo.completed} onChange={handleCheckboxChange} />\n\t\t</List.Item>\n\t);\n};\n\nconst ListHeader: React.FC = () => {\n\tconst [todoFilter, setTodoFilter] = useRecoilState(todoFilterAtom);\n\n\tconst handleChange = (value: string) => {\n\t\tsetTodoFilter(value);\n\t};\n\n\treturn (\n\t\t<div className={styles.header}>\n\t\t\t<Select value={todoFilter} onChange={handleChange}>\n\t\t\t\t<Select.Option value={TODO_FILTER.ALL}>{TODO_FILTER.ALL}</Select.Option>\n\t\t\t\t<Select.Option value={TODO_FILTER.COMPLETED}>{TODO_FILTER.COMPLETED}</Select.Option>\n\t\t\t\t<Select.Option value={TODO_FILTER.ACTIVE}>{TODO_FILTER.ACTIVE}</Select.Option>\n\t\t\t</Select>\n\t\t</div>\n\t);\n};\n\nexport default TodoRecoil;\n","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\atoms\\index.ts",["37","38","39","40","41"],"D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\mods\\TodoRecoil\\mods\\TodoAdd\\index.tsx",["42"],"import React, { ChangeEvent, useMemo, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { Input, Button } from 'antd';\nimport styles from './index.module.css';\nimport { todoListAtom, generateTodo } from '../../atoms';\n\nconst TodoAdd = () => {\n\tconst [input, setInput] = useState('');\n\tconst [todoList, setTodoList] = useRecoilState(todoListAtom);\n\n\tconst handleInputChange = (ev: ChangeEvent<HTMLInputElement>) => {\n\t\tsetInput(ev.target.value);\n\t};\n\n\tconst handleAddClick = () => {\n\t\tif (input?.length > 0) {\n\t\t\tconst todo = generateTodo(input);\n\t\t\tsetTodoList(todoList.concat(todo));\n\t\t}\n\t};\n\treturn (\n\t\t<div className={styles.inputWrap}>\n\t\t\t<Input value={input} onChange={handleInputChange} />\n\t\t\t<Button type=\"primary\" onClick={handleAddClick}>\n\t\t\t\tAdd\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default TodoAdd;\n","D:\\2020_projects\\learning\\react-app-demo-4-ts\\src\\constants\\index.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":30,"nodeType":"49","messageId":"50","endLine":1,"endColumn":37},{"ruleId":"47","severity":1,"message":"51","line":14,"column":10,"nodeType":"49","messageId":"50","endLine":14,"endColumn":21},{"ruleId":"47","severity":1,"message":"52","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":21},{"ruleId":"47","severity":1,"message":"53","line":5,"column":2,"nodeType":"49","messageId":"50","endLine":5,"endColumn":16},{"ruleId":"47","severity":1,"message":"54","line":7,"column":2,"nodeType":"49","messageId":"50","endLine":7,"endColumn":10},{"ruleId":"47","severity":1,"message":"55","line":8,"column":2,"nodeType":"49","messageId":"50","endLine":8,"endColumn":25},{"ruleId":"56","severity":2,"message":"57","line":44,"column":30,"nodeType":"49","endLine":44,"endColumn":47},{"ruleId":"47","severity":1,"message":"48","line":1,"column":30,"nodeType":"49","messageId":"50","endLine":1,"endColumn":37},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'SelectValue' is defined but never used.","'useCallback' is defined but never used.","'selectorFamily' is defined but never used.","'selector' is defined but never used.","'ReadOnlySelectorOptions' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useRecoilCallback\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","no-global-assign","no-unsafe-negation"]